{"version":3,"sources":["components/Header/Header.js","components/Profile/Profile.js","components/Footer/Footer.js","components/TodoArea/TodoList.js","components/TodoArea/AddTodo.js","components/TodoArea/TodoArea.js","App.js","index.js"],"names":["Header","useDisclosure","isOpen","onOpen","onClose","isDark","useColorMode","colorMode","useMediaQuery","isNotSmallerScreen","position","bg","opacity","w","h","alignSelf","direction","spacing","p","mt","align","fontSize","fontWeight","bgGradient","bgClip","color","colorSchema","onClick","pb","placeholder","display","padding","mb","borderRadius","backgroundColor","boxShadow","boxSize","src","Profile","maxWidth","base","md","lg","xl","px","py","size","rounded","mr","justify","as","DiWebplatform","DiCodeigniter","Footer","TodoList","todos","deleteTodo","length","divider","borderColor","borderWidth","sm","alignItems","map","todo","body","icon","isRound","id","colorScheme","m","AddTodo","addTodo","toast","useToast","useState","content","setContent","onSubmit","e","preventDefault","nanoid","title","status","duration","isClosable","variant","value","onChange","target","type","TodoArea","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","newTodos","filter","App","toggleColorMode","ml","window","open","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6998177.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Stack, Circle, Flex, Box, Text } from '@chakra-ui/layout'\r\nimport { Button, Image, useDisclosure, Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    Form,\r\n    FormLabel,\r\n    Input} from '@chakra-ui/react';\r\nimport { useMediaQuery } from '@chakra-ui/media-query'\r\n\r\nfunction Header () {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const { colorMode } = useColorMode();\r\n    const isDark = colorMode === 'dark';\r\n\r\n    const [isNotSmallerScreen] = useMediaQuery(\"(min-width: 600px)\");\r\n    \r\n    return (\r\n        <Stack>\r\n            <Circle position=\"absolute\" bg=\"blue.100\" opacity=\"0.1\" w=\"16rem\" h=\"16rem\" alignSelf=\"flex-end\" />\r\n            <Flex direction={isNotSmallerScreen ? \"row\" : \"column\"} spacing=\"200px\" p={isNotSmallerScreen ? \"32\" : \"0\"} alignSelf=\"flex-start\">\r\n                <Box mt={isNotSmallerScreen ? \"0\" : 16} align=\"flex-start\" >\r\n                    <Text fontSize=\"5x1\" fontWeight=\"semibold\">Oi! Somos a</Text>\r\n                    <Text fontSize=\"7x1\" fontWeight=\"bold\" bgGradient=\"linear(to-r, cyan.400, blue.500, purple.600)\" bgClip='text' >Caramelo Web</Text>\r\n                    <Text color={isDark ? \"gray.200\" : \"gray.500\"} >Desevolvedor Web Javascript, React, Vue, Angular</Text>\r\n                <Button mt={8} colorSchema=\"blue\" onClick={onOpen}>Contrate-me</Button>\r\n                <Modal\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            >\r\n             <ModalOverlay />\r\n            <ModalContent>\r\n            <ModalHeader>Mande sua mensagem, ficarei muito feliz em responde-la</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n              <FormControl>\r\n                <FormLabel>Esta gostando?</FormLabel>\r\n                <Input placeholder=\"Diga o que esta achando\" />\r\n              </FormControl>\r\n  \r\n              <FormControl mt={4}>\r\n                <FormLabel>Sua sugestão vale ouro!</FormLabel>\r\n                <Input placeholder=\"sua sugestao será sempre bem vinda\" />\r\n              </FormControl>\r\n            </ModalBody>\r\n  \r\n            <ModalFooter>\r\n              <Text display=\"flex\" padding=\"4\">meramente ilustrativo</Text>\r\n              <Button onClick={onClose}>Cancel</Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n            </Modal>\r\n            \r\n                </Box>\r\n                <Image alignSelf=\"center\" mt={isNotSmallerScreen ? \"0\" : \"12\"}\r\n                    mb={isNotSmallerScreen ? \"0\" : \"12\"} borderRadius='full'\r\n                    backgroundColor=\"transparent\" boxShadow=\"lg\"\r\n                    boxSize=\"16rem\" src='https://avatars.githubusercontent.com/u/50808840?v=4'\r\n                />\r\n            </Flex>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Flex, Box, Heading, Text } from '@chakra-ui/layout'\r\nimport { useMediaQuery } from '@chakra-ui/media-query'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { DiWebplatform, DiCodeigniter } from 'react-icons/di'\r\nimport { \r\n    Button,\r\n    useDisclosure, \r\n    useRef, \r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    Form,\r\n    FormLabel,\r\n    Input,\r\n} from '@chakra-ui/react'\r\n\r\nfunction Profile ( ) {\r\n    \r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n  \r\n    const [isNotSmallerScreen] = useMediaQuery(\"(min-width: 600px)\");\r\n    \r\n    return (\r\n        <Flex direction={isNotSmallerScreen ? \"row\" : \"column\"} w=\"100%\"\r\n            maxWidth={{ base: \"100vh\", md: \"100vh\", lg: \"100vh\", xl: \"100vh\"}}>\r\n            <Box alignSelf=\"\" px=\"16\" py=\"16\">\r\n                <Heading fontWeight=\"extrabold\" color=\"cyan.500\" size=\"4xl  \">\r\n                    Formação\r\n                </Heading>\r\n                <Text fontSize=\"2xl\" color=\"gray.400\">Analise e Desenvolvimento de Sistemas <em>(em andamento)</em></Text>\r\n                \r\n            <Button onClick={onOpen} mt={2}>Educação</Button>  \r\n            <Modal\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            >\r\n             <ModalOverlay />\r\n            <ModalContent>\r\n            <ModalHeader>Desenvolvedor Web Javascript</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n             <Text>Cursando Analise e Desenvolvimento de Sistemas</Text>\r\n             <Text>Certifcações Devmedia HTML, CSS3, Javascript, React</Text>\r\n             <Text>Certificação Udemy Cod3r Cursos Web Moderno com Javascript 2021</Text>\r\n            </ModalBody>\r\n  \r\n            <ModalFooter>\r\n              <Button onClick={onClose}>Fechar</Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n            </Modal>\r\n            </Box>\r\n            <Box alignSelf=\"center\" px=\"32\" py=\"16\">\r\n                <Text fontWeight=\"bold\" fontSize=\"2xl\">Especializando-se em tecnologia Web, futuro engenheiro de software.</Text>\r\n                <Flex direction={isNotSmallerScreen ? \"row\" : \"column\"} mt={8}>\r\n                    <Flex rounded=\"xl\" mr={1} direction=\"column\" mt={4} bg=\"blue.400\" h=\"30vh\" w=\"30vh\" justify=\"flex-end\">\r\n                        <Icon color=\"white\" p=\"4\" as={DiWebplatform} w=\"24\" h=\"24\" />\r\n                        <Text color=\"white\" p=\"4\" fontSize=\"xl\" fontWeight=\"semibold\">Web Apps</Text>\r\n                    </Flex>\r\n                    <Flex rounded=\"xl\" mr={1} direction=\"column\" mt={4} bg=\"gray.100\" h=\"30vh\" w=\"30vh\" justify=\"flex-end\">\r\n                        <Icon color=\"red\" p=\"4\" as={DiCodeigniter} w=\"24\" h=\"24\" />\r\n                        <Text color=\"black\" p=\"4\" fontSize=\"xl\" fontWeight=\"semibold\">Web Sites</Text>\r\n                    </Flex>\r\n                    <Flex rounded=\"xl\" mr={1} direction=\"column\" mt={4} bgGradient=\"linear(to-r, green.100, green.300)\" h=\"30vh\" w=\"30vh\" justify=\"flex-end\">\r\n                        <Icon color=\"red\" p=\"4\" as={DiCodeigniter} w=\"24\" h=\"24\" />\r\n                        <Text color=\"black\" p=\"4\" fontSize=\"xl\" fontWeight=\"semibold\">Mobile Apps</Text>\r\n                    </Flex>\r\n                </Flex>\r\n            </Box>\r\n        </Flex>\r\n        \r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            @CarameloWeb\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { VStack, HStack, Text, IconButton, StackDivider, Spacer, Badge } from '@chakra-ui/react'\r\nimport { FaTrash } from 'react-icons/fa'\r\nfunction TodoList({todos, deleteTodo }) {\r\n    \r\n    if(!todos.length) {\r\n        return (\r\n            <Badge colorScheme=\"green\" p=\"4\" m=\"4\" borderRadius=\"lg\">\r\n                Sem tarefas!\r\n            </Badge>\r\n        )\r\n    }\r\n\r\n    return <>\r\n        <VStack\r\n            divider={<StackDivider />}\r\n            borderColor=\"gray.100\"\r\n            borderWidth=\"2px\"\r\n            p=\"4\"\r\n            borderRadius=\"lg\"\r\n            w=\"100%\"\r\n            maxWidth={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw' }}\r\n            alignItems='stretch'\r\n        >\r\n            {todos.map((todo) => (\r\n                <HStack key={todo.id}>\r\n                    <Text>{todo.body}</Text>\r\n                    <Spacer />\r\n                    <IconButton icon={<FaTrash />} isRound='true' onClick={() => deleteTodo(todo.id)} />\r\n                </HStack>\r\n            ))}\r\n        </VStack>\r\n\r\n    </>\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState } from 'react'\r\nimport { Button, HStack, Input, useToast } from '@chakra-ui/react'\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nfunction AddTodo({ addTodo }) {\r\n\r\nconst toast = useToast()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n    if(!content) {\r\n        toast({\r\n            title: 'Escreva uma tarefa',\r\n            status: 'error',\r\n            duration: 2000,\r\n            isClosable: true,\r\n        })\r\n        \r\n        return\r\n    }        \r\n        const todo = {\r\n            id: nanoid(),\r\n            body: content,\r\n        }\r\n\r\n        addTodo(todo)\r\n        setContent('')\r\n    }\r\n\r\n    const [content, setContent] = useState('')\r\n     \r\n    return <>\r\n                <form onSubmit={handleSubmit}>\r\n                    <HStack mt='8'>\r\n                        <Input\r\n                            variant='filled'\r\n                            placeholder='escreva uma tarefa'\r\n                            value={content}\r\n                            onChange={(e) => setContent(e.target.value)}\r\n                        />\r\n                        <Button colorScheme='pink' px='6' type='submit'>Add Tarefa</Button>\r\n                    </HStack>\r\n                </form>\r\n           </>\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Heading, VStack, IconButton } from '@chakra-ui/react'\r\nimport TodoList from './TodoList'\r\nimport AddTodo from './AddTodo'\r\n\r\nfunction TodoArea() {\r\n\r\n    \r\n  const initialTodos = [\r\n    {\r\n        id: 1,\r\n        body: 'fazer app',\r\n    },\r\n    {\r\n        id: 2,\r\n        body: 'fazer web-app',\r\n    },\r\n    {\r\n        id: 3,\r\n        body: 'estudo continuo'\r\n    }\r\n  ]\r\n   \r\n  const [todos, setTodos] = useState(\r\n      () => JSON.parse(localStorage.getItem('todos')) || []) \r\n\r\n  useEffect(() => {\r\n      localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n  \r\n    function deleteTodo(id) {\r\n    const newTodos = todos.filter(todo => {\r\n        return todo.id !== id\r\n    })\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  function addTodo(todo) {\r\n      setTodos([...todos, todo])\r\n  }\r\n\r\n  return <>\r\n        <VStack>\r\n            <Heading \r\n            \r\n            mb=\"8\"\r\n            fontWeight=\"extrabold\"\r\n            size=\"2xl\"\r\n            bgGradient=\"linear(to-r, pink.500, pink.300, blue.500)\"\r\n            bgClip=\"text\"\r\n            >Lista de Tarefas</Heading>\r\n            <TodoList todos={todos} deleteTodo={deleteTodo}/>\r\n            <AddTodo addTodo={addTodo} mb=\"8\" />\r\n        </VStack>\r\n    </>\r\n}\r\n\r\nexport default TodoArea","import { IconButton } from '@chakra-ui/button';\nimport { useColorMode } from '@chakra-ui/color-mode';\nimport { Flex, VStack, Heading, Spacer } from '@chakra-ui/layout';\nimport { FaSun, FaMoon, FaInstagram, FaGithub, FaLinkedin } from 'react-icons/fa';\nimport Header from './components/Header/Header.js';\nimport Profile from './components/Profile/Profile.js';\nimport Footer from './components/Footer/Footer.js';\nimport TodoArea from './components/TodoArea/TodoArea.js';\n\nfunction App() {\n  \n  const { colorMode, toggleColorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n\n  return (\n    <VStack p={2} maxWidth=\"90vw\">\n      <Flex w='100%'>\n        <Heading ml=\"4\" size='md' fontWeight=\"semibold\" color=\"cyan.400\">Caramelo App</Heading>\n        <Spacer></Spacer>\n        <IconButton size=\"sm\" icon={<FaLinkedin />} isRound=\"true\" onClick={() => {window.open('https://www.linkedin.com/in/tharsis-soares-caramelo/')}}></IconButton>\n        <IconButton ml={2} size=\"sm\" icon={<FaInstagram />} isRound=\"true\" onClick={() => {window.open('https://www.instagram.com/tharsissoares/')}}></IconButton>\n        <IconButton ml={2} size=\"sm\" icon={<FaGithub />} isRound=\"true\" onClick={() => window.open('https://github.com/tharsis-soares')}></IconButton>\n        <IconButton ml={4} size=\"sm\" icon={isDark ? <FaSun/> : <FaMoon />} isRound=\"true\" onClick={toggleColorMode}></IconButton>   \n      </Flex>\n      <Header></Header>\n      <Profile></Profile>\n      <TodoArea></TodoArea>\n      <Footer></Footer>\n    </VStack>\n  );\n}\n\nexport default App;\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n     <ColorModeScript initialColorMode=\"light\"></ColorModeScript>\n        <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}